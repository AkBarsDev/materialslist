
networks:
  front:
    driver: bridge
  back:
    driver: bridge
volumes:
  is-www:
    driver: local  
  ui-www:
    driver: local
services:
  
  materialslist-backend:
    hostname: backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - POSTGRESS_CONNECTINGSTRING=${POSTGRESS_CONNECTINGSTRING}
      - CONNECTINGSTRING=${MATERIALS_CONNECTINGSTRING}
    ports:
      - "8090:8080"
    restart: always
    networks:
      - back
      - front

  materialslist-ui:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      # - ASPNETCORE_HTTPS_PORTS=8081
      - URL_IDENTITYSERVER=${URL_IDENTITYSERVER}
      - URL_FILESAPI=${URL_FILESAPI}
      - URL_MATERIALSAPI=${URL_MATERIALSAPI}
      - URL_METADATE_IDENTITYSERVER=${URL_METAIS}
    restart: always
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - front
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
 
  materialslist-us:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - SOURCE_STORAGE=/home/
      - CONNECTINGSTRING=${FILEBASE_CONNECTINGSTRING}
      - URL_IDETITYSERVER=${URL_IDENTITYSERVER}
    ports:
      - "8085:8080"
    networks:
      - back
      - front
    volumes:
      - ${FILEBASE_SOURCE_DIR}:/home/Source

  proxy:
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    ports:
      - "80:80"
    networks:
      - front
      - back

  database:
    container_name: "app-database"
    hostname: database
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password12!
    expose:
     - "1433"
    ports:
      - "1433:1433"
    restart: always
    networks:
      - back
    volumes:
       - ./database:/var/opt/mssql/data
  
  db-postgres:
    command:
        - "postgres"
        - "-c"
        - "config_file=/etc/postgresql.conf"
    environment:
        POSTGRES_DB: "B2HMaterials"
        POSTGRES_USER: "b2h"
        POSTGRES_PASSWORD: "temppgpwd4"
        PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
       - ./pginitdata:/docker-entrypoint-initdb.d
       - ./pgdata/postgresql.conf:/etc/postgresql.conf:ro
    ports:
        - "1434:5432"
    restart: unless-stopped
    networks:
      - front
      - back
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U b2h -d B2HMaterials"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  seq:
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 82:80
      - 5341:5341 
    restart: unless-stopped
    networks:
      - front
      - back

  pgadmin:
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@b2h.com"
      PGADMIN_DEFAULT_PASSWORD: "temppgadminpwd4"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
      - ./pgdata:/var/pgdata
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:
      - front
      - back
