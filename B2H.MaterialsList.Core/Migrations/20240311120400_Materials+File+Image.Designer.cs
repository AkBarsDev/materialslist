// <auto-generated />
using System;
using B2H.MaterialsList.Core.Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace B2H.MaterialsList.Core.Migrations
{
	[DbContext(typeof(MaterialsListContext))]
    [Migration("20240311120400_Materials+File+Image")]
    partial class MaterialsFileImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaterialsList.Backend.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentId");

                    b.ToTable("CategoriesMaterial");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.Filebase", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Material")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("FileId");

                    b.ToTable("Filebases");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.HistoryUpdate", b =>
                {
                    b.Property<Guid>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HistoryId");

                    b.HasIndex("MaterialId");

                    b.ToTable("HistoryUpdate");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ImageId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.Material", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("Gost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModeratorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("MaterialId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FileId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.Category", b =>
                {
                    b.HasOne("MaterialsList.Backend.Models.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.HistoryUpdate", b =>
                {
                    b.HasOne("MaterialsList.Backend.Models.Material", "Material")
                        .WithMany("LastUpdate")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.Image", b =>
                {
                    b.HasOne("MaterialsList.Backend.Models.Material", null)
                        .WithMany("Images")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.Material", b =>
                {
                    b.HasOne("MaterialsList.Backend.Models.Category", "Category")
                        .WithMany("Materials")
                        .HasForeignKey("CategoryId");

                    b.HasOne("MaterialsList.Backend.Models.Filebase", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.Navigation("Category");

                    b.Navigation("File");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.Category", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("MaterialsList.Backend.Models.Material", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("LastUpdate");
                });
#pragma warning restore 612, 618
        }
    }
}
