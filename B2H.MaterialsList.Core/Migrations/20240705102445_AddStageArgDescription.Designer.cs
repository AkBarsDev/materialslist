// <auto-generated />
using System;
using B2H.MaterialsList.Core.Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace B2H.MaterialsList.Core.Migrations
{
    [DbContext(typeof(MaterialsListContext))]
    [Migration("20240705102445_AddStageArgDescription")]
    partial class AddStageArgDescription
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Approval", b =>
                {
                    b.Property<Guid>("ApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrentStageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ApprovalId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.ApprovalHistory", b =>
                {
                    b.Property<Guid>("ApprovalHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<Guid>("ApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApprovalHistoryId");

                    b.HasIndex("ApprovalId");

                    b.ToTable("ApprovalsHistory");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.ApprovalStage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApprovalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NextStageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreviousStageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StageNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalId");

                    b.ToTable("ApprovalStages");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryId");

                    b.HasIndex(new[] { "ParentId" }, "IX_CategoriesMaterial_ParentId");

                    b.ToTable("CategoriesMaterial", (string)null);
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Filebase", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("FileId");

                    b.ToTable("Filebases");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.HistoryUpdate", b =>
                {
                    b.Property<Guid>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataUpdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HistoryId");

                    b.HasIndex(new[] { "MaterialId" }, "IX_HistoryUpdate_MaterialId");

                    b.ToTable("HistoryUpdate", (string)null);
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ImageId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Material", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("Gost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MaterialId");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Materials_CategoryId");

                    b.HasIndex(new[] { "FileId" }, "IX_Materials_FileId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.MaterialImage", b =>
                {
                    b.Property<int>("MaterialImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialImageId"));

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<Guid?>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MaterialImageId");

                    b.HasIndex("ImageId");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialImages");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Approval", b =>
                {
                    b.HasOne("B2H.MaterialsList.Core.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.ApprovalHistory", b =>
                {
                    b.HasOne("B2H.MaterialsList.Core.Models.Approval", "Approval")
                        .WithMany("ApprovalHistory")
                        .HasForeignKey("ApprovalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approval");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.ApprovalStage", b =>
                {
                    b.HasOne("B2H.MaterialsList.Core.Models.Approval", "Approval")
                        .WithMany("ApprovalStages")
                        .HasForeignKey("ApprovalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approval");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Category", b =>
                {
                    b.HasOne("B2H.MaterialsList.Core.Models.Category", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.HistoryUpdate", b =>
                {
                    b.HasOne("B2H.MaterialsList.Core.Models.Material", "Material")
                        .WithMany("HistoryUpdates")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Material", b =>
                {
                    b.HasOne("B2H.MaterialsList.Core.Models.Category", "Category")
                        .WithMany("Materials")
                        .HasForeignKey("CategoryId");

                    b.HasOne("B2H.MaterialsList.Core.Models.Filebase", "File")
                        .WithMany("Materials")
                        .HasForeignKey("FileId");

                    b.Navigation("Category");

                    b.Navigation("File");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.MaterialImage", b =>
                {
                    b.HasOne("B2H.MaterialsList.Core.Models.Image", "Image")
                        .WithMany("MaterialImages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("B2H.MaterialsList.Core.Models.Material", "Material")
                        .WithMany("MaterialImages")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Image");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Approval", b =>
                {
                    b.Navigation("ApprovalHistory");

                    b.Navigation("ApprovalStages");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Category", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Filebase", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Image", b =>
                {
                    b.Navigation("MaterialImages");
                });

            modelBuilder.Entity("B2H.MaterialsList.Core.Models.Material", b =>
                {
                    b.Navigation("HistoryUpdates");

                    b.Navigation("MaterialImages");
                });
#pragma warning restore 612, 618
        }
    }
}
